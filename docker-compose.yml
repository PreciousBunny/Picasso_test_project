version: '3.9'

services:
  db:
    image: postgres:14-alpine
    restart: always
    container_name: db
    environment:
      PGDATA: /var/lib/postgresql/pgdata
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  backend:
    restart: always
    build: .
    container_name: backend
    command: >
      bash -c "python  manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    volumes:
      - .:/app
      - .static_volume:/app/static
      - .media_volume:/app/media
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
      build: ./nginx
      restart: always
      volumes:
        - .static_volume:/app/static
        - .media_volume:/app/media
      ports:
        - 8000:80
      depends_on:
        - backend

  redis:
    image: redis:7.2.3-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    container_name: redis
    healthcheck:
      test: [ 'CMD-SHELL', 'redis-cli ping | grep PONG' ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/cache:/data
    ports:
      - "6379:6379"


  celery:
    build: .
    restart: always
    container_name: celery
    command: >
      bash -c "celery -A config worker -l INFO"
    volumes:
      - .:/app
    links:
      - redis
    depends_on:
      - redis


volumes:
  postgres_data:
  static_volume:
  media_volume: